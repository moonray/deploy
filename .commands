#!/bin/bash

# fetch a pr from git and switch to it
function pr()
 {
	if [[ $# -ne 2 ]]; then
    echo "Missing pullId and ticketId (branch name) paramenters."
    echo "Example: pr 276 SRSP-8745"
	else
		git fetch upstream pull/"$1"/head:"$2"
		git checkout "$2"
	fi
}

function gitlog()
{
  PS1_RESET="\033[0m"
  PS1_YELLOW="\033[93m"
  PS1_RED="\e[91m"

  DATE="$1"
	if [[ $# -ne 1 ]]; then
    DATE=$(date +%Y-%m-%d)
  fi
  TOMORROW=$(date -j -f "%Y-%m-%d" -v +1d "$DATE" +%Y-%m-%d)

  GETNAME=`git config user.name`

	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]; then
		REPO=`git rev-parse --show-toplevel`
		REPO=`basename ${REPO}`

    printf "${PS1_YELLOW}Here are all the commits for ${REPO}${parse_git_dirty} on $DATE:${PS1_RESET}\n"
    git log --pretty=format:"%ad | %h | %B" --date=format:"%R" --author-date-order --reverse --branches --after="$DATE 00:00" --before="$TOMORROW 00:00" --author="$GETNAME" | sed '/^[[:space:]]*$/d'
	else
    printf >&2 "${PS1_RED}This is not a git repository (or any of the parent directories).${PS1_RESET}\n"
  fi
}

function gitlogall()
{
  CURRENTPATH="`pwd`";

  cd /Volumes/dev/api
  gitlog $@

  cd /Volumes/dev/frontend
  gitlog $@

  cd /Volumes/dev/ng
  gitlog $@

  cd $CURRENTPATH
}

function init_ng()
{
  cd "/Volumes/dev/ng"
  make up
  git submodule update --init
  ./scripts/dev/docker-compose-bootstrap
  up
  yarn install
  docker exec -it fpm bash <<'EOF'
php vendor/bin/phinx migrate
exit
EOF
  cd -
}

function init_frontend()
{
  cd "/Volumes/dev/frontend"
  . scripts/install.sh
  cd -
}

# initialize github repos
function init()
{
  ABORT=0
  if [[ ! -s "$HOME/.deploy" ]]; then
    ABORT=1
  else
    source "$HOME/.deploy"
    if [[ ! -n $GITUSER ]]; then
      ABORT=1
    fi
  fi

  if [[ $ABORT -eq 1 ]]; then
    PS1_RESET="\033[0m"
    PS1_YELLOW="\033[93m"

    printf "Missing a ${PS1_YELLOW}.deploy${PS1_RESET} configuration file in your home directory.\n"
    printf "Run ${PS1_YELLOW}deploy${PS1_RESET} to set it up.\n"
  else
    CURRENTPATH="`pwd`";

    source "$HOME/.deploy"

    cd "/Volumes/dev"
    if [[ ! -d "api" || "$(git -C "ng" rev-parse 2>&1)" ]]; then
      git clone git@github.com:${GITUSER}/api.git api
      cd api

      git remote add upstream git@github.com:sharpspring/api
      git fetch upstream
      git branch master --set-upstream-to upstream/master
      git pull

      cd ..
    fi
    if [[ ! -d "frontend" || "$(git -C "frontend" rev-parse 2>&1)" ]]; then
      git clone git@github.com:${GITUSER}/frontend.git frontend
      cd frontend

      git remote add upstream git@github.com:sharpspring/frontend
      git fetch upstream
      git branch master --set-upstream-to upstream/master
      git pull

      init_frontend
      cd ..
    fi
    if [[ ! -d "ng" || "$(git -C "ng" rev-parse 2>&1)" ]]; then
      git clone git@github.com:${GITUSER}/SharpSpringNG.git ng
      cd ng

      git remote add upstream git@github.com:sharpspring/SharpSpringNG
      git fetch upstream
      git branch master --set-upstream-to upstream/master
      git pull

      cd ..
      init_ng
    fi
    cd $CURRENTPATH
  fi
}

# start up ng docker container
function up()
{
  cd "/Volumes/dev/ng"
  docker-compose up -d
  docker-compose stop elasticsearch
  docker-compose stop searchsync
  cd -
}

# wind down ng docker container
function down()
{
  cd "/Volumes/dev/ng"
  docker-compose down
  cd -
}
